# values.yaml for Fluent Bit Helm deployment

config:
  inputs: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [INPUT]
        Name              systemd
        Tag               host.*
        Systemd_Filter    _SYSTEMD_UNIT=kubelet.service
        Systemd_Filter    _SYSTEMD_UNIT=docker.service
        Systemd_Filter    _SYSTEMD_UNIT=containerd.service

    [INPUT]
        Name              tail
        Tag               apiserver
        Path              /var/log/kubernetes/audit/audit.log
        Parser            json

  filters: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

    [FILTER]
        Name                modify
        Match               host.*
        Add                 node_name ${NODE_NAME}

    [FILTER]
        Name                record_modifier
        Match               *
        Record              cluster_name ${CLUSTER_NAME}

  outputs: |
    [OUTPUT]
        Name               opentelemetry
        Match              *
        Host               otel-collector.monitoring.svc.cluster.local
        Port               4318
        Metrics_URI        /v1/metrics
        Logs_URI           /v1/logs
        Traces_URI         /v1/traces
        Log_response_payload True
        Tls                On
        Tls.verify         Off

# Deployment configuration
daemonset:
  enabled: true
  annotations: {}

rbac:
  create: true
  nodeAccess: true

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_ACCOUNT_ID:role/EKS-FluentBit-Role

tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule

resources:
  limits:
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 100Mi

env:
  - name: CLUSTER_NAME
    value: "your-eks-cluster-name"
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName

volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true

volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File


----------------------------------

This configuration:
Collects container logs, systemd logs (kubelet, docker, containerd), and API server audit logs.
Enriches logs with Kubernetes metadata and adds node and cluster name labels.
Forwards all logs to an OpenTelemetry Collector (assumed to be running in the monitoring namespace).
Deploys Fluent Bit as a DaemonSet to ensure it runs on all nodes.
Sets up necessary RBAC permissions and tolerations for master nodes.
Configures resource limits and requests for the Fluent Bit pods.
To deploy this configuration:
Save the above YAML as values.yaml.
Run the Helm install command:
bash
helm install fluent-bit fluent/fluent-bit --values values.yaml
elm repo update
1. Install Fluent Bit using the Helm chart:
bash
helm install fluent-bit fluent/fluent-bit
For a more customized installation, you can create a values.yaml file with your desired configuration and use it during installation:
bash
helm install fluent-bit fluent/fluent-bit --values values.yaml

--------------------------------

To configure Fluent Bit to collect all types of logs in an EKS setup and forward them to OpenTelemetry (OTEL) with Loki as the exporter, you'll need a comprehensive configuration. Here's a detailed Fluent Bit configuration:
Input Configuration

[INPUT]
    Name              tail
    Tag               kube.*
    Path              /var/log/containers/*.log
    Parser            docker
    DB                /var/log/flb_kube.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

[INPUT]
    Name              systemd
    Tag               host.*
    Systemd_Filter    _SYSTEMD_UNIT=kubelet.service
    Systemd_Filter    _SYSTEMD_UNIT=docker.service
    Systemd_Filter    _SYSTEMD_UNIT=containerd.service

[INPUT]
    Name              tail
    Tag               apiserver
    Path              /var/log/kubernetes/audit/audit.log
    Parser            json


FILTER
[FILTER]
    Name                kubernetes
    Match               kube.*
    Kube_URL            https://kubernetes.default.svc:443
    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
    Merge_Log           On
    K8S-Logging.Parser  On
    K8S-Logging.Exclude On

[FILTER]
    Name                modify
    Match               host.*
    Add                 node_name ${NODE_NAME}

[FILTER]
    Name                record_modifier
    Match               *
    Record              cluster_name ${CLUSTER_NAME}


Output
[OUTPUT]
    Name               opentelemetry
    Match              *
    Host               otel-collector.monitoring.svc.cluster.local
    Port               4318
    Metrics_URI        /v1/metrics
    Logs_URI           /v1/logs
    Traces_URI         /v1/traces
    Log_response_payload True
    Tls                On
    Tls.verify         Off

Dploy FLuentbit as Daemonset 
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: logging
spec:
  selector:
    matchLabels:
      app: fluent-bit
  template:
    metadata:
      labels:
        app: fluent-bit
    spec:
      containers:
      - name: fluent-bit
        image: fluent/fluent-bit:latest
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
